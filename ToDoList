import Foundation


struct Date: Equatable {
    var year : Int, month: Int, day: Int
    
    init(year: Int, month: Int, day: Int) {
        self.year = year
        self.month = month
        self.day = day
    }
    

    static func == (lhs: Date, rhs: Date) -> Bool {
         return lhs.year == rhs.year &&
                lhs.month == rhs.month &&
                lhs.day == rhs.day
        }
}

final class Task: Equatable {
    static func == (lhs: Task, rhs: Task) -> Bool {
        return lhs.content == rhs.content &&  lhs.deadline == rhs.deadline &&  lhs.completed == rhs.completed
    }

    static var allTasks = [Task]()

    var content: String
    var completed: Bool = false
    var deadline: Date

    init(content: String, deadline: Date) {
        self.content = content
        self.deadline = deadline
        Task.allTasks.append(self)
    }
    
    func edit(_ newContent: String) {
        self.content = newContent
    }

    func setDeadline(_ deadline: Date) {
        self.deadline = deadline
    }

    func markAsCompleted() {
        self.completed = true
    }

    var printableTask: String {
        if completed {
            return "âœ… \(self.content)"
        } else if self.deadline.day - today.day <= 1 {
            return "ğŸŸ¥ \(self.content) due on \(String(describing: self.deadline))"
        } else {
            return "ğŸŸ© \(self.content) due on \(String(describing: self.deadline))"
        }
    }
    
    
    func delete() {
        if let index = Task.allTasks.firstIndex(of: self) {
            print("The task \(self.content) has been deleted")
                Task.allTasks.remove(at: index)
        }
    }
}


var t = Task(content: "Send homework", deadline: Date(year: 2023, month: 6, day: 13))
var t1 = Task(content: "Call grandma", deadline: Date(year: 2023, month: 6, day: 16))
var t2 = Task(content: "Read", deadline: Date(year: 2023, month: 6, day: 17))
var t3 = Task(content: "Clean the house", deadline: Date(year: 2023, month: 6, day: 19))
var t4 = Task(content: "Go shopping", deadline: Date(year: 2023, month: 6, day: 21))
var t5 = Task(content: "Read more", deadline: Date(year: 2023, month: 6, day: 29))

t.markAsCompleted()
t2.markAsCompleted()
t5.delete()

let today: Date = Date(year: 2023, month: 6, day: 16)
for task in Task.allTasks{
    print(task.printableTask)
}

var completedCount = 0
for task in Task.allTasks {
    if task.completed {
        completedCount += 1
    }
}
print("Completed \(completedCount) tasks out of \(Task.allTasks.count)")


//The task Read more has been deleted
//âœ… Send homework
//ğŸŸ¥ Call grandma due on Date(year: 2023, month: 6, day: 16)
//âœ… Read
//ğŸŸ© Clean the house due on Date(year: 2023, month: 6, day: 19)
//ğŸŸ© Go shopping due on Date(year: 2023, month: 6, day: 21)
//Completed 2 tasks out of 5
